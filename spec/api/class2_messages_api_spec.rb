=begin
#Chat API SDK

#The SDK allows you to receive and send messages through your WhatsApp account. [Sign up now](https://app.chat-api.com/)  The Chat API is based on the WhatsApp WEB protocol and excludes the ban both when using libraries from mgp25 and the like. Despite this, your account can be banned by anti-spam system WhatsApp after several clicking the \"block\" button.

The version of the OpenAPI document: 1.0.0
Contact: sale@chat-api.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::Class2MessagesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'Class2MessagesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::Class2MessagesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of Class2MessagesApi' do
    it 'should create an instance of Class2MessagesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::Class2MessagesApi)
    end
  end

  # unit tests for forward_message
  # Forwarding messages to a new or existing chat.
  # Only one of two parameters is needed to determine the destination - chatId or phone.
  # @param forward_message_request 
  # @param [Hash] opts the optional parameters
  # @return [SendMessageStatus]
  describe 'forward_message test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_messages
  # Get a list of messages.
  # To receive only new messages, pass the **lastMessageNumber** parameter from the last query.  Files from messages are guaranteed to be stored only for 30 days and can be deleted. Download the files as soon as you get to your server.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :last_message_number The lastMessageNumber parameter from the last response
  # @option opts [Boolean] :last Displays the last 100 messages. If this parameter is passed, then lastMessageNumber is ignored.
  # @option opts [String] :chat_id Filter messages by chatId  Chat ID from the message list. Examples: 17633123456@c.us for private messages and 17680561234-1479621234@g.us for the group.
  # @option opts [Integer] :limit Sets length of the message list. Default 100. With value 0 returns all messages.
  # @option opts [Integer] :min_time Filter messages received after specified time. Example: 946684800.
  # @option opts [Integer] :max_time Filter messages received before specified time. Example: 946684800.
  # @return [Messages]
  describe 'get_messages test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_contact
  # Sending a contact or contact list to a new or existing chat.
  # Only one of two parameters is needed to determine the destination - chatId or phone.
  # @param send_contact_request 
  # @param [Hash] opts the optional parameters
  # @return [SendMessageStatus]
  describe 'send_contact test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_file
  # Send a file to a new or existing chat.
  # Only one of two parameters is needed to determine the destination - chatId or phone.
  # @param send_file_request 
  # @param [Hash] opts the optional parameters
  # @return [SendMessageStatus]
  describe 'send_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_link
  # Send text with link and link&#39;s preview to a new or existing chat.
  # Only one of two parameters is needed to determine the destination - chatId or phone.
  # @param send_link_request 
  # @param [Hash] opts the optional parameters
  # @return [SendMessageStatus]
  describe 'send_link test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_location
  # Sending a location to a new or existing chat.
  # Only one of two parameters is needed to determine the destination - chatId or phone.
  # @param send_location_request 
  # @param [Hash] opts the optional parameters
  # @return [SendMessageStatus]
  describe 'send_location test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_message
  # Send a message to a new or existing chat.
  # The message will be added to the queue for sending and delivered even if the phone is disconnected from the Internet or authorization is not passed.  Only one of two parameters is needed to determine the destination - chatId or phone.
  # @param send_message_request 
  # @param [Hash] opts the optional parameters
  # @return [SendMessageStatus]
  describe 'send_message test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_ptt
  # Send a ptt-audio to a new or existing chat.
  # Only one of two parameters is needed to determine the destination - chatId or phone.
  # @param send_ptt_request 
  # @param [Hash] opts the optional parameters
  # @return [SendMessageStatus]
  describe 'send_ptt test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_v_card
  # Sending a vcard to a new or existing chat.
  # Only one of two parameters is needed to determine the destination - chatId or phone.
  # @param send_v_card_request 
  # @param [Hash] opts the optional parameters
  # @return [SendMessageStatus]
  describe 'send_v_card test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
